---
- name: Check the gpio group exists or create
  group:
    name: gpio
    state: present

- name: Create user {{ microservice_account }}
  user:
    name: "{{ microservice_account }}"
    groups: gpio # to allow access to sensors
    append: yes
    state: present

- name: Create config directory
  file:
    path: "{{ microservices_configs_dir }}"
    state: directory
    owner: root
    group: root

- name: install prereq packages
  become: true
  apt:
    name: "{{ packages }}"
    state: present 
    update_cache: true
  vars:
    packages:
      - git
      - python-pip
      - python-virtualenv
      - python3-dev

- name: "checkout {{ microservice_name }}"
  git:
    # TODO: remove this hard coding
    version: refactor-flask-gunicorn
    repo: "{{ microservice_git_repo }}"
    dest: "{{ git_local_dest }}"

- name: Create virtual env at {{ virtual_env_path }} with requirements.txt"
  pip:
    chdir: "{{ git_local_dest }}"
    virtualenv: "{{ virtual_env_path }}"
    virtualenv_python: "{{ virtual_env_python_version }}"
    requirements: requirements.txt

- name: install package into virtual-env
  pip:
    virtualenv: "{{ virtual_env_path }}"
    virtualenv_python: "{{ virtual_env_python_version }}"
    name: "{{ git_local_dest }}"

- name: Copy config file template if required
  template:
    src: "{{ microservice_name }}.config"
    dest: "{{ microservices_configs_dir }}/{{ microservice_name }}.config"
  when: microservice_has_config|default(false)|bool

- name: Copy systemd file for starting service on boot
  become: yes
  template:
    src: "{{ microservice_name }}.service"
    dest: "/etc/systemd/system/{{ microservice_name }}.service"
    mode: 0644

- name: reload systemd configs
  systemd:
    daemon_reload: yes

- name: Enable service to run on boot and start
  become: yes
  service:
    name: "{{ microservice_name }}.service"
    state: restarted
    enabled: true
