# A simple configuration file for monitoring the local host
# This can serve as an example for configuring other servers;
# Custom services specific to this host are added here, but services
# defined in nagios2-common_services.cfg may also apply.
# 

define host{
        use                     generic-host            ; Name of host template to use
        host_name               reverse-proxy
        alias                   reverse-proxy
        address                 127.0.0.1
        }

# Define a service to "ping" the local machine

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             PING
	check_command			check_ping!100.0,20%!500.0,60%
        }


# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Root Partition
	check_command			check_local_disk!20%!10%!/
        }



# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Current Users
	check_command			check_local_users!20!50
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 users.

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Total Processes
	check_command			check_local_procs!250!400!RSZDT
        }



# Define a service to check the load on the local machine. 

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Current Load
	check_command			check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }



# Define a service to check the swap usage the local machine. 
# Critical if less than 10% of swap is free, warning if less than 20% is free

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Swap Usage
	check_command			check_local_swap!20!10
        }



# Define a service to check SSH on the local machine.
# Disable notifications for this service by default, as not all users may have SSH enabled.

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             SSH
	check_command			check_ssh
	notifications_enabled		0
        }



# Define a service to check HTTP on the local machine.
# Disable notifications for this service by default, as not all users may have HTTP enabled.

define service{
        use                             local-service         ; Name of service template to use
        service_description             HTTPS
        host_name               reverse-proxy
	check_command			check_https
	notifications_enabled		0
        }

define service{
        use                             local-service         ; Name of service template to use
        host_name               reverse-proxy
        service_description             Check SSL
	check_command			check_ssl_cert
        }

#efine service{
#       use                             local-service         ; Name of service template to use
#       host_name                       monitoring-station
#       service_description             Check Garage API
#check_command			check_http_url_with_port!172.16.2.102!/garage/status/all!25678
#       }

#efine service{
#       use                             local-service         ; Name of service$
#       host_name               reverse-proxy
#       service_description             Uptime
#       check_command                   check_nrpe_plain!uptime
#       notifications_enabled           0
#       }
#efine service{
#       use                             local-service         ; Name of service$
#       service_description             Case Temperature
#       host_name               reverse-proxy
#       check_command                   check_nrpe_plain!case_temperature
#normal_check_interval		30 # Check every 15 mins so that the db does not get overfilled
#active_checks_enabled		0
#       }
#efine service{
#       use                             local-service         ; Name of service$
#       host_name               reverse-proxy
#       service_description             Basement Temperature
#       check_command                   check_nrpe_plain!basement_temperature
#normal_check_interval		30 # Check every 15 mins so the sensor does not return invalid readings
#active_checks_enabled		0
#       }

#define service{
#       use                             local-service         ; Name of service$
#       host_name                       monitoring-station
#       service_description             AWS Route 53 Update
#       check_command                   check_nrpe_plain!aws_route_53_update
#normal_check_interval		1440 # once a day
#       }


#efine service{
#       use                             local-service
#       host_name               reverse-proxy
#       service_description             SIP Service Up
#       check_command                   check_sip!-u sip:110@172.16.2.100
#       check_interval           	5
#

#efine service{
#       use                             local-service         ; Name of service template to use
#       contacts                        {{ nagios_contact_name }}-sms
#       host_name               reverse-proxy
#       service_description             Telegram Bot Available
#       check_command                   check_nrpe!check_telegram_bot
#active_checks_enabled		0
#       }
#efine service{
#       use                             local-service         ; Name of service template to use
#       contacts                        {{ nagios_contact_name }}-sms
#       host_name               reverse-proxy
#       service_description             UPS Power Status
#       check_command                   check_apcupsd!status
#check_interval			1
#       }

#efine service{
#       use                             local-service         ; Name of service template to use
#       contacts                        {{ nagios_contact_name }}-sms
#       host_name               reverse-proxy
#       service_description             UPS Time Left
#       check_command                   check_apcupsd!timeleft
#       }

#efine service{
#       use                             local-service         ; Name of service template to use
#       host_name               reverse-proxy
#       service_description             AirVPN Status
#       check_command                   check_airvpn_connections
#active_checks_enabled		0
#passive_checks_enabled		1
#       }

# In pi2.cfg now
#efine service{
#       use                             local-service         ; Name of service template to use
#       host_name                       monitoring-station
#       service_description             Garage Status
#       check_command                   check_garage_status
#       }

#efine service{
#       use                             local-service         ; Name of service template to use
#       host_name                       monitoring-station
#       service_description             Check Alerts API
#       contacts                        {{ nagios_contact_name }}-sms
#check_command			check_http_url_with_port!monitoring-station!/get_nagios_unsent_alerts!25001
#       }

#efine service{
#       use                             local-service         ; Name of service template to use
#       host_name                       monitoring-station
#       service_description             Check Passive Alert API
#       contacts                        {{ nagios_contact_name }}-sms
#check_command			check_http_url_with_port!monitoring-station!/submit_check!25003
#       }

#efine service{
#       use                             local-service         ; Name of service$
#       host_name               reverse-proxy
#       service_description             Check Filebeat Service
#       check_command                   check_nrpe_plain!check_filebeat
#       notifications_enabled           0
#       }
