
- name: Add docker gpg keys
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: Install prerequiste packages
  apt:
    name: ["apt-transport-https","ca-certificates", "curl", "gnupg2", "software-properties-common","python-docker"]
    state: present
    update_cache: yes
     
- name: Add docker apt repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian stretch stable"
    state: present
    filename: docker

- name: Install docker packages
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Install python docker packages
  pip:
    name: ["docker-compose", "docker"]
    state: present

- include_tasks: mysql-phpmyadmin.yaml
 
- name: Create config directories
  file:
    state: directory
    path: "{{ docker_configs_root_path }}/apache2"
    owner: root
    group: root

- name: copy apache2 config files
  template:
    src: "docker-apache/{{ item }}"
    dest: "{{ docker_configs_root_path }}/apache2"
  loop:
    - ssl-setup.conf
    - aws_passwd
    - httpd.conf
    - Dockerfile

- name: build apache2 image
  docker_image:
    name: docker-apache2-ssl
    tag: "0.1b1"
    state: present
    source: build
    build:
      path: "{{ docker_configs_root_path }}/apache2"

- name: deploy apache2 container
  docker_container:
    name: some-apache2-container
    image: "docker-apache2-ssl:0.1b1"
    state: started
    restart_policy: always
    pull: no # build locally
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
    published_ports:
      - 8080:443
 
- name: deploy nextcloud container
  docker_container:
    name: some-nextcloud-container
    image: "nextcloud:16-apache"
    state: started
    restart_policy: always
    networks:
      - name: db_network
    volumes:
      - "{{ docker_data_path }}/owncloud:/var/www/html"
    published_ports:
      - 9100:80
    # comment for first run setup
    env:
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: "{{ vault_mysql_nextcloud_password }}"
      MYSQL_HOST: some-mariadb-container
      NEXTCLOUD_ADMIN_USER: "{{ vault_nextcloud_admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ vault_nextcloud_admin_password }}"

# name: deploy telegram-bot container
# docker_container:
#   name: some-telegram-bot
#   image: "avinashoza/telegram-bot:v0.2b9"
#   pull: yes
#   state: started
#   restart_policy: always
#   env:
#     TZ: "America/New_York"
#     AWS_DEFAULT_REGION: "{{ vault_aws_default_region }}"
#     AWS_ACCESS_KEY_ID : "{{ vault_aws_access_key_id }}"
#     AWS_SECRET_ACCESS_KEY: "{{ vault_aws_secret_access_key }}"
#     TELEGRAM_BOT_API_KEY: "{{ vault_telegram_api_key }}"
#     TELEGRAM_BOT_ADMINS: "{{ vault_telegram_admin_id }}"
#     TELEGRAM_GARAGE_REQUEST_ARN : "{{ vault_aws_sns_garage_request_arn }}"
