---
- name: install nagios and plugins
  apt: 
    name: ['nagios4', 'nagios-plugins-contrib', 'python3-boto3']
    cache_valid_time: 1440

- name: Enable nagios external commands
  lineinfile:
    backup: true
    dest: /etc/nagios4/nagios.cfg
    state: present
    regexp: '^check_external_commands'
    line: "check_external_commands=1"

- name: Disable logging of passive checks
  lineinfile:
    backup: true
    dest: /etc/nagios4/nagios.cfg
    state: present
    regexp: '^log_passive_checks'
    line: "log_passive_checks=0"

- name: Pass environment macros
  lineinfile:
    backup: true
    dest: /etc/nagios4/nagios.cfg
    state: present
    regexp: '^enable_environment_macros'
    line: "enable_environment_macros=1"


- name: delete stock config includes
  lineinfile:
    backup: true
    dest: /etc/nagios4/nagios.cfg
    regexp: '^cfg_file='
    state: absent

- name: add group for external commands
  group:
    name: "{{ nagios_command_group }}"
    state: present

- name: Add users to the nagcmd group
  user:
    name: "{{ item }}"
    groups: "{{ nagios_command_group }}" # for passive checks
    append: yes
    state: present
  with_items:
    - nagios
    - www-data

- name: copy over send_nagios_alert.sh
  include_role:
    name: copy-scripts
  vars:
    script_to_copy: send_nagios_alert.sh

- name: copy over send_sns_alert.py
  include_role:
    name: copy-scripts
  vars:
    script_to_copy: send_sns_alert.py

- name: copy over nagios configs
  tags: config
  template:
    backup: true
    src: "{{ item }}"
    dest: "/etc/nagios4/conf.d/{{ item | basename | regex_replace('\\.j2', '') }}"
  with_fileglob:
    - ../templates/conf.d/*

- name: Enable required apache modules
  command: "a2enmod {{ item }}"
  with_items:
    - auth_digest
    - authz_groupfile

# name: set proper permissions on socket
# file:
#   state: file
#   path: "{{ nagios_command_file_path }}"
#   owner: nagios
#   group: "{{ nagios_command_group }}"
#   mode: "0770"

- name: set proper permissions on checkresults
  file:
    state: directory
    recurse: yes
    path: "{{ nagios_results_file_path }}"
    owner: nagios
    group: "{{ nagios_command_group }}"
    mode: "0770"

# name: copy over web config
# tags: config
# template:
#   backup: true
#   src: nagios3.conf.j2
#   dest: /etc/apache2/conf-available/nagios3.conf

# name: Allow nagios user sudo access for plugins
# lineinfile:
#   dest: /etc/sudoers
#   state: present
#   regexp: '^nagios'
#   line: "nagios ALL=(ALL) NOPASSWD:/usr/lib/nagios/plugins/,{{ user_home_directory }}/home-projects/pi"
#   validate: 'visudo -cf %s'

- name: Restart nagios server
  service:
    name: nagios4
    state: restarted

# name: Generate ssh key for nagios user
# user:
#   name: nagios
#   generate_ssh_key: yes
#   ssh_key_comment: "nagios@{{ ansible_hostname }}"

# name: Fetch public key to local machine
# fetch:
#   src: "{{ user_home_directory}}/.ssh/id_rsa.pub"
#   dest: "{{ playbook_dir }}/nagios_pub_key.pub"
#   fail_on_missing: yes
#   flat: yes

#TODO: handle copying over apache configs
- include_tasks: install-nrdp.yaml
