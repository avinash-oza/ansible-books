---
- name: install apache2 and other modules
  apt: 
    name: "{{ item }}"
    state: present
    update_cache: true
    cache_valid_time: 3600

  with_items:
    - apache2
    - apache2-dev
    - libapache2-mod-scgi

- name: Disable listening on port 80
  lineinfile:
    backup: true
    dest: /etc/apache2/ports.conf
    state: absent
    regexp: "{{ item }}"
  with_items:
    - "^NameVirtualHost"
    - "Listen 80"

- name: install unzip for google2fa
  apt: 
    name: unzip
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: Check for google2fa module
  stat:
    path: /etc/apache2/mods-enabled/mod_authn_google.so
  register: google2fa_module

#TODO: Move this block to seperate file
- name: Download google2fa package
  get_url:
    url: "{{ google_2fa_package_url }}"
    dest: /tmp/source_archive.zip
  when: google2fa_module.stat.exists == False

- name: Extract google2fa package
  unarchive:
    src: /tmp/source_archive.zip
    dest: /tmp
    remote_src: yes
  when: google2fa_module.stat.exists == False

- name: Compile google2fa
  command: make
  args:
    chdir: /tmp/google-authenticator-apache-module/trunk
    creates: /tmp/google-authenticator-apache-module/trunk/.libs/mod_authn_google.so
  when: google2fa_module.stat.exists == False

- name: Copy compiled module to apache directory
  become: true
  copy:
    src: /tmp/google-authenticator-apache-module/trunk/.libs/mod_authn_google.so
    dest: /etc/apache2/mods-enabled
    remote_src: true
  when: google2fa_module.stat.exists == False

- name: Enable ssl and proxy module for apache
  become: true
  command: "a2enmod {{ item }}"
  with_items:
    - proxy
    - ssl
    - proxy_http

#TODO: Download and extract ruttorent with proper settings and mount
- name: Copy default SSL site
  become: true
  template:
    backup: true
    src: main-ssl-host.conf.j2
    dest: /etc/apache2/sites-available/main-ssl-host.conf
    owner: root
    group: root

- name: Copy aws passwd
  become: true
  copy:
    src: aws_passwd
    dest: /etc/apache2/
    owner: root
    group: root


- name: Copy reverse proxy configs
  become: true
  template:
    backup: true
    src: "{{ item }}.conf.j2"
    dest: "/etc/apache2/conf-available/{{ item }}.conf"
  with_items:
    - docker_phpmyadmin
    - docker_gogs
    - docker_kibana
    - rutorrent
    - sns-callback

- debug: 
    msg: "Do not forget to enable relevant apache configs with a2enconf"


- name: Enable default SSL site
  become: true
  command: "a2ensite {{ item }}"
  with_items:
    - main-ssl-host

- name: Restart apache2
  service:
    name: apache2
    state: restarted
