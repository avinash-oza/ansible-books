---
- name: install nagios3 and plugins
  apt: pkg={{item}}  state=installed update_cache=false
  with_items:
    - nagios3
    - nagios-plugins-contrib
    - nagios-nrpe-plugin

- name: Enable nagios external commands
  lineinfile:
    backup: true
    dest: /etc/nagios3/nagios.cfg
    state: present
    regexp: '^check_external_commands'
    line: "check_external_commands=1"


- name: Symlink airvpn_checker plugin with nagios plugins
  file:
    src: "{{ user_home_directory }}/home-projects/pi/airvpn_checker"
    dest: /usr/lib/nagios/plugins/check_airvpn_status
    state: link
    owner: root
    group: root

- name: copy airvpn config
  template:
    src: airvpn_checker.config.j2
    dest: "{{ user_home_directory }}/home-projects/pi/airvpn_checker/airvpn.config"
    owner: "nagios"
    group: "nagios"

- name: copy over nagios configs
  template:
    backup: true
    src: "{{ item }}"
    dest: "/etc/nagios3/conf.d/{{ item | basename | regex_replace('\\.j2', '') }}"
  with_fileglob:
    - ../templates/conf.d/*

- name: Allow nagios user sudo access for plugins
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^nagios'
    line: "nagios ALL=(ALL) NOPASSWD:/usr/lib/nagios/plugins/,{{ user_home_directory }}/home-projects/pi"
    validate: 'visudo -cf %s'

- name: Restart nagios server
  service:
    name: nagios3
    state: restarted

- name: Generate ssh key for nagios user
  user:
    name: nagios
    generate_ssh_key: yes
    ssh_key_comment: "nagios@{{ ansible_hostname }}"

- name: Fetch public key to local machine
  fetch:
    src: "{{ user_home_directory}}/.ssh/id_rsa.pub"
    dest: "{{ playbook_dir }}/nagios_pub_key.pub"
    fail_on_missing: yes
    flat: yes

#TODO: handle copying over apache configs
